# build.yml
on:
  pull_request:
    branches:        
    - main        
  push:
    branches:
    - main

name: OpenSource Stack Ci/Cd

env:
 AWS_DEFAULT_REGION: us-east-2
AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
DATABASE_IMAGE: zumbacafew:database_${{ github.sha }}
BACKEND_IMAGE: zumbacafew:backend_${{ github.sha }}
FRONTEND_IMAGE: zumbacafew:frontend_${{ github.sha }}

jobs: 
  run_cicd:
    name: "Run Ci/Cd"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[s3]
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Pull latest data
        run: |
          dvc pull
          ls data/PPG_ACC_dataset
      - name: Execute DVC pipeline
        run: |
          dvc repro -f
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build Docker image
        run : |
          mlflow models build-docker -m "$(cat artifact_location.txt)" -n "rnn-model-image"
      - name: Push Docker image to ECR
        run: |
          docker push rnn-model-image

      
